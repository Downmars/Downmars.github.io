[{"content":"前言 在上一篇文章“ Hugo博客搭建_基础 😊 ”中，我们讲解了如何搭建一个Hugo博客，这一篇文章将会讲解如何配置Hugo博客。\n基础配置文件 我们曾经在hugo.yaml中配置本博客的一些功能，我们将会在这一部分补充和讨论剩余的配置： hugo.yaml 101 lines # Basic Configuration (基础配置) baseURL: \u0026#34;\u0026#34; # Site URL (网站 URL)(e.g. https://downmars.github.io/) title: \u0026#34;\u0026#34; # Site title (网站标题)(e.g. DLog) theme: \u0026#34;\u0026#34; # Theme name (主题名称)(e.g. PaperMod, in /themes/) # Feature Toggles (功能开关) enableEmoji: true # Enable emoji support (启用表情支持)(e.g. https://gohugo.io/quick-reference/emojis/#smileys--emotion) enableRobotsTXT: true # Enable search engine support (启用搜索引擎支持) hasCJKLanguage: true # Enable CJK language support (启用中日韩语言支持) buildDrafts: false # Build draft posts (是否构建草稿文章) buildFuture: false # Build future posts (是否构建未来日期文章) buildExpired: false # Build expired posts (是否构建过期文章) # Parameters Configuration (参数配置) params: # Theme Settings (主题设置) defaultTheme: dark # Default theme mode (默认主题模式) disableThemeToggle: false # Allow theme switching (允许主题切换) # Display Features (显示功能) ShowShareButtons: true # Show social share buttons (显示分享按钮) ShowCodeCopyButtons: true # Show code copy buttons (显示代码复制按钮) ShowReadingTime: true # Show reading time estimate (显示阅读时间) ShowWordCount: true # Show word count (显示字数统计) ShowPostNavLinks: true # Show post navigation (显示文章导航) ShowBreadCrumbs: true # Show breadcrumb navigation (显示面包屑导航) ShowToc: true # Show table of contents (显示目录) TocOpen: true # TOC expanded by default (目录默认展开) math: true fancybox: true # Display Images (显示图片) # Comment System (评论系统) comments: true # Enable comments (启用评论) giscus: # Giscus configuration (Giscus 配置) repo: \u0026#34;\u0026#34; repoId: \u0026#34;\u0026#34; category: \u0026#34;\u0026#34; categoryId: \u0026#34;\u0026#34; mapping: \u0026#34;pathname\u0026#34; strict: \u0026#34;0\u0026#34; reactionsEnabled: \u0026#34;1\u0026#34; emitMetadata: \u0026#34;0\u0026#34; inputPosition: \u0026#34;bottom\u0026#34; lightTheme: \u0026#34;light\u0026#34; darkTheme: \u0026#34;dark\u0026#34; lang: \u0026#34;zh-CN\u0026#34; crossorigin: \u0026#34;anonymous\u0026#34; fuseOpts: # refer: https://sonnycalcr.github.io/posts/build-a-blog-using-hugo-papermod-github-pages/#%e9%85%8d%e7%bd%ae%e6%90%9c%e7%b4%a2 isCaseSensitive: false # 是否大小写敏感 shouldSort: true # 是否排序 location: 0 distance: 1000 threshold: 0.4 minMatchCharLength: 0 # limit: 10 # refer: https://www.fusejs.io/api/methods.html#search keys: [\u0026#34;title\u0026#34;, \u0026#34;permalink\u0026#34;, \u0026#34;summary\u0026#34;, \u0026#34;content\u0026#34;] includeMatches: true # Assets Files (资源文件) assets: favicon: \u0026#34;\u0026#34; # Site favicon (网站图标) favicon16x16: \u0026#34;\u0026#34; # Small favicon (小图标) favicon32x32: \u0026#34;\u0026#34; # Medium favicon (中图标) apple_touch_icon: \u0026#34;\u0026#34; # iOS icon (iOS 图标) safari_pinned_tab: \u0026#34;\u0026#34; # Safari icon (Safari 图标) # Multilingual Support (多语言支持) languages: zh: languageCode: \u0026#34;zh-CN\u0026#34; languageName: \u0026#34;简体中文\u0026#34; contentDir: \u0026#34;content/zh\u0026#34; weight: 1 menu: main: - identifier: posts name: \u0026#34;Posts\u0026#34; url: \u0026#34;/posts/\u0026#34; weight: 1 # Output Settings (输出设置) outputs: home: - HTML - RSS - JSON # Required for search (搜索功能需要) # Rendering Configuration (渲染配置) markup: goldmark: renderer: unsafe: true # Allow HTML in markdown (允许 Markdown 中的 HTML) highlight: codeFences: true # Enable code highlighting (启用代码高亮) guessSyntax: true # Guess code language (猜测代码语言) lineNos: true # Show line numbers (显示行号) style: dracula # Code highlight theme (代码高亮主题) lineNumbersInTable: true 功能开关 表情支持 通过启用此功能，我们能够从 Github Emoji API 和 Unicode 完整表情符号列表中读取数据。博主显出极高兴的样子，将两个指头的敲着键盘，点头说，“对呀对呀！……表情有两样写法，你知道么？”\nShortcode: :drooling_face:\u0026#x1f924;\nUnicode: \u0026amp;#x1F924🤤\n关于对应的表情和文档可以查询：\nshortcode↗ Unicode↗ 参数配置 图片放大 参考于： Hugo PaperMod 主题精装修↗ Sonny_boyThis is a caption for the image\n我们使用引入 fancybox↗ 来实现：\n在layouts/shortcodes/figure.html中加入：\nlayouts/shortcodes/figure.html 38 lines \u0026lt;script src=\u0026#34;https://cdn.jsdelivr.net/npm/jquery@3.4.1/dist/jquery.min.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;https://cdn.jsdelivr.net/gh/fancyapps/fancybox@3.5.7/dist/jquery.fancybox.min.css\u0026#34; /\u0026gt; \u0026lt;script src=\u0026#34;https://cdn.jsdelivr.net/gh/fancyapps/fancybox@3.5.7/dist/jquery.fancybox.min.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;a data-fancybox=\u0026#34;gallery\u0026#34; href=\u0026#34;{{ .Get \u0026#34;src\u0026#34; }}\u0026#34;\u0026gt; \u0026lt;figure{{ if or (.Get \u0026#34;class\u0026#34;) (eq (.Get \u0026#34;align\u0026#34;) \u0026#34;center\u0026#34;) }} class=\u0026#34; {{- if eq (.Get \u0026#34;align\u0026#34;) \u0026#34;center\u0026#34; }}align-center {{ end }} {{- with .Get \u0026#34;class\u0026#34; }}{{ . }}{{- end }}\u0026#34; {{- end -}}\u0026gt; {{- if .Get \u0026#34;link\u0026#34; -}} \u0026lt;a href=\u0026#34;{{ .Get \u0026#34;link\u0026#34; }}\u0026#34;{{ with .Get \u0026#34;target\u0026#34; }} target=\u0026#34;{{ . }}\u0026#34;{{ end }}{{ with .Get \u0026#34;rel\u0026#34; }} rel=\u0026#34;{{ . }}\u0026#34;{{ end }}\u0026gt; {{- end }} \u0026lt;img loading=\u0026#34;lazy\u0026#34; src=\u0026#34;{{ .Get \u0026#34;src\u0026#34; }}{{- if eq (.Get \u0026#34;align\u0026#34;) \u0026#34;center\u0026#34; }}#center{{- end }}\u0026#34; {{- if or (.Get \u0026#34;alt\u0026#34;) (.Get \u0026#34;caption\u0026#34;) }} alt=\u0026#34;{{ with .Get \u0026#34;alt\u0026#34; }}{{ . }}{{ else }}{{ .Get \u0026#34;caption\u0026#34; | markdownify| plainify }}{{ end }}\u0026#34; {{- end -}} {{- with .Get \u0026#34;width\u0026#34; }} width=\u0026#34;{{ . }}\u0026#34;{{ end -}} {{- with .Get \u0026#34;height\u0026#34; }} height=\u0026#34;{{ . }}\u0026#34;{{ end -}} /\u0026gt; \u0026lt;!-- Closing img tag --\u0026gt; {{- if .Get \u0026#34;link\u0026#34; }}\u0026lt;/a\u0026gt;{{ end -}} {{- if or (or (.Get \u0026#34;title\u0026#34;) (.Get \u0026#34;caption\u0026#34;)) (.Get \u0026#34;attr\u0026#34;) -}} \u0026lt;figcaption\u0026gt; {{ with (.Get \u0026#34;title\u0026#34;) -}} {{ . }} {{- end -}} {{- if or (.Get \u0026#34;caption\u0026#34;) (.Get \u0026#34;attr\u0026#34;) -}}\u0026lt;p\u0026gt; {{- .Get \u0026#34;caption\u0026#34; | markdownify -}} {{- with .Get \u0026#34;attrlink\u0026#34; }} \u0026lt;a href=\u0026#34;{{ . }}\u0026#34;\u0026gt; {{- end -}} {{- .Get \u0026#34;attr\u0026#34; | markdownify -}} {{- if .Get \u0026#34;attrlink\u0026#34; }}\u0026lt;/a\u0026gt;{{ end }}\u0026lt;/p\u0026gt; {{- end }} \u0026lt;/figcaption\u0026gt; {{- end }} \u0026lt;/figure\u0026gt; \u0026lt;/a\u0026gt; 数学公示 参考于： Hugo博客添加LaTeX语法支持↗ 、 Hugo PaperMod 主题精装修↗ 、 MathJax 与 Markdown 的究极融合↗ 上述博客中提到了相同的问题即 ”对于mathjax与markdown格式中，hugo在渲染的过程中将_渲染为了\u0026lt;em\u0026gt;标签，导致mathjax在渲染的时候找不到原来正确的公示“。\n首先，我们在hugo.yaml中添加：\nhugo.yaml 2 lines params: math: true 接着，我们在layouts/partials/mathjax.html中添加： layouts/partials/mathjax.html 25 lines \u0026lt;script type=\u0026#34;text/javascript\u0026#34; async src=\u0026#34;https://cdn.bootcss.com/mathjax/2.7.3/MathJax.js?config=TeX-AMS-MML_HTMLorMML\u0026#34;\u0026gt; MathJax.Hub.Config({ tex2jax: { inlineMath: [[\u0026#39;$\u0026#39;,\u0026#39;$\u0026#39;], [\u0026#39;\\\\(\u0026#39;,\u0026#39;\\\\)\u0026#39;]], displayMath: [[\u0026#39;$$\u0026#39;,\u0026#39;$$\u0026#39;], [\u0026#39;\\[\\[\u0026#39;,\u0026#39;\\]\\]\u0026#39;]], processEscapes: true, processEnvironments: true, skipTags: [\u0026#39;script\u0026#39;, \u0026#39;noscript\u0026#39;, \u0026#39;style\u0026#39;, \u0026#39;textarea\u0026#39;, \u0026#39;pre\u0026#39;], TeX: { equationNumbers: { autoNumber: \u0026#34;AMS\u0026#34; }, extensions: [\u0026#34;AMSmath.js\u0026#34;, \u0026#34;AMSsymbols.js\u0026#34;] } } }); MathJax.Hub.Queue(function() { // Fix \u0026lt;code\u0026gt; tags after MathJax finishes running. This is a // hack to overcome a shortcoming of Markdown. Discussion at // https://github.com/mojombo/jekyll/issues/199 var all = MathJax.Hub.getAllJax(), i; for(i = 0; i \u0026lt; all.length; i += 1) { all[i].SourceElement().parentNode.className += \u0026#39; has-jax\u0026#39;; } }); \u0026lt;/script\u0026gt; 接着，在layouts/partials/extend_footer.html中添加：\nlayouts/partials/extend_footer.html 25 lines \u0026lt;script\u0026gt; (function () { var i, text, code, codes = document.getElementsByTagName(\u0026#34;code\u0026#34;); for (i = 0; i \u0026lt; codes.length; ) { code = codes[i]; if (code.parentNode.tagName !== \u0026#34;PRE\u0026#34; \u0026amp;\u0026amp; code.childElementCount === 0) { text = code.textContent; if (/^\\$[^$]/.test(text) \u0026amp;\u0026amp; /[^$]\\$$/.test(text)) { text = text.replace(/^\\$/, \u0026#34;\\\\(\u0026#34;).replace(/\\$$/, \u0026#34;\\\\)\u0026#34;); code.textContent = text; } if ( /^\\\\\\((.|\\s)+\\\\\\)$/.test(text) || /^\\\\\\[(.|\\s)+\\\\\\]$/.test(text) || /^\\$(.|\\s)+\\$$/.test(text) || /^\\\\begin\\{([^}]+)\\}(.|\\s)+\\\\end\\{[^}]+\\}$/.test(text) ) { code.outerHTML = code.innerHTML; // remove \u0026lt;code\u0026gt;\u0026lt;/code\u0026gt; continue; } } i++; } })(); \u0026lt;/script\u0026gt; 最后，在layouts/partials/extend_head.html中添加来判断hugo.yaml中是否启用来决定是否渲染：\nlayouts/partials/extend_head.html 3 lines {{ if or .Params.math .Site.Params.math }} {{- partial \u0026#34;mathjax.html\u0026#34; .}} {{ end }} 本处引用的方法通过将带有公式部分使用代码block装饰起来，避免内容被修改，再将代码block去除，完整将其送给渲染工具。\n没做处理之前，以下代码无法渲染：\n$$ \\frac{\\partial E(\\boldsymbol{w})}{\\partial z_j} = \\sum\\limits_{k}\\frac{\\partial E(\\boldsymbol{w})}{\\partial y_{k}}\\frac{\\partial y_k}{\\partial z_{j}}= \\sum\\limits_{k} (y_{k}- \\hat{y}_{k}) w_{kj}^{(2)} \\tag{5.11} $$ 现有几个问题待解决：1、白色黑色主题字体颜色未翻转；2、字体大小没有自动渲染正确，在中间的一个步骤，使能够正常匹配主题的颜色和字体大小，但是完全渲染过后就会出现刚才提及的问题，可能的解决方法参考于 解决 mathjax 数学公式渲染的字体大小问题↗ 目录配置 对于自带的目录，只显示在文章最上面，既不能让读者随时掌握到阅读进度，也不够优雅，所以我在参考了 在PaperMod中引入侧边目录和阅读进度显示↗ 基础上做了一些改动\n自动编号 当前浏览章节下划线显示 创建 layout/partials/toc.html , layouts/partials/toc.hmtl 265 lines \u0026lt;!-- 目录侧边栏 --\u0026gt; {{- $headers := findRE \u0026#34;\u0026lt;h[1-6].*?\u0026gt;(.|\\n])+?\u0026lt;/h[1-6]\u0026gt;\u0026#34; .Content -}} {{- $has_headers := ge (len $headers) 1 -}} {{- if $has_headers -}} \u0026lt;aside id=\u0026#34;toc-container\u0026#34; class=\u0026#34;toc-container wide\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;toc\u0026#34;\u0026gt; \u0026lt;details {{if (.Param \u0026#34;TocOpen\u0026#34;) }} open{{ end }}\u0026gt; \u0026lt;summary accesskey=\u0026#34;c\u0026#34; title=\u0026#34;(Alt + C)\u0026#34;\u0026gt; \u0026lt;span class=\u0026#34;details\u0026#34;\u0026gt;{{- i18n \u0026#34;toc\u0026#34; | default \u0026#34;Table of Contents\u0026#34; }}\u0026lt;/span\u0026gt; \u0026lt;/summary\u0026gt; \u0026lt;div class=\u0026#34;inner\u0026#34;\u0026gt; {{- $largest := 6 -}} {{- range $headers -}} {{- $headerLevel := index (findRE \u0026#34;[1-6]\u0026#34; . 1) 0 -}} {{- $headerLevel := len (seq $headerLevel) -}} {{- if lt $headerLevel $largest -}} {{- $largest = $headerLevel -}} {{- end -}} {{- end -}} {{- $firstHeaderLevel := len (seq (index (findRE \u0026#34;[1-6]\u0026#34; (index $headers 0) 1) 0)) -}} {{- $.Scratch.Set \u0026#34;bareul\u0026#34; slice -}} \u0026lt;ul\u0026gt; {{- range seq (sub $firstHeaderLevel $largest) -}} \u0026lt;ul\u0026gt; {{- $.Scratch.Add \u0026#34;bareul\u0026#34; (sub (add $largest .) 1) -}} {{- end -}} {{- range $i, $header := $headers -}} {{- $headerLevel := index (findRE \u0026#34;[1-6]\u0026#34; . 1) 0 -}} {{- $headerLevel := len (seq $headerLevel) -}} {{/* get id=\u0026#34;xyz\u0026#34; */}} {{- $id := index (findRE \u0026#34;(id=\\\u0026#34;(.*?)\\\u0026#34;)\u0026#34; $header 9) 0 }} {{- /* strip id=\u0026#34;\u0026#34; to leave xyz, no way to get regex capturing groups in hugo */ -}} {{- $cleanedID := replace (replace $id \u0026#34;id=\\\u0026#34;\u0026#34; \u0026#34;\u0026#34;) \u0026#34;\\\u0026#34;\u0026#34; \u0026#34;\u0026#34; }} {{- $header := replaceRE \u0026#34;\u0026lt;h[1-6].*?\u0026gt;((.|\\n])+?)\u0026lt;/h[1-6]\u0026gt;\u0026#34; \u0026#34;$1\u0026#34; $header -}} {{- if ne $i 0 -}} {{- $prevHeaderLevel := index (findRE \u0026#34;[1-6]\u0026#34; (index $headers (sub $i 1)) 1) 0 -}} {{- $prevHeaderLevel := len (seq $prevHeaderLevel) -}} {{- if gt $headerLevel $prevHeaderLevel -}} {{- range seq $prevHeaderLevel (sub $headerLevel 1) -}} \u0026lt;ul\u0026gt; {{/* the first should not be recorded */}} {{- if ne $prevHeaderLevel . -}} {{- $.Scratch.Add \u0026#34;bareul\u0026#34; . -}} {{- end -}} {{- end -}} {{- else -}} \u0026lt;/li\u0026gt; {{- if lt $headerLevel $prevHeaderLevel -}} {{- range seq (sub $prevHeaderLevel 1) -1 $headerLevel -}} {{- if in ($.Scratch.Get \u0026#34;bareul\u0026#34;) . -}} \u0026lt;/ul\u0026gt; {{/* manually do pop item */}} {{- $tmp := $.Scratch.Get \u0026#34;bareul\u0026#34; -}} {{- $.Scratch.Delete \u0026#34;bareul\u0026#34; -}} {{- $.Scratch.Set \u0026#34;bareul\u0026#34; slice}} {{- range seq (sub (len $tmp) 1) -}} {{- $.Scratch.Add \u0026#34;bareul\u0026#34; (index $tmp (sub . 1)) -}} {{- end -}} {{- else -}} \u0026lt;/ul\u0026gt; \u0026lt;/li\u0026gt; {{- end -}} {{- end -}} {{- end -}} {{- end }} \u0026lt;li\u0026gt; \u0026lt;a href=\u0026#34;#{{- $cleanedID -}}\u0026#34; aria-label=\u0026#34;{{- $header | plainify -}}\u0026#34;\u0026gt;{{- $header | safeHTML -}}\u0026lt;/a\u0026gt; {{- else }} \u0026lt;li\u0026gt; \u0026lt;a href=\u0026#34;#{{- $cleanedID -}}\u0026#34; aria-label=\u0026#34;{{- $header | plainify -}}\u0026#34;\u0026gt;{{- $header | safeHTML -}}\u0026lt;/a\u0026gt; {{- end -}} {{- end -}} {{- $firstHeaderLevel := $largest }} {{- $lastHeaderLevel := len (seq (index (findRE \u0026#34;[1-6]\u0026#34; (index $headers (sub (len $headers) 1)) 1) 0)) }} \u0026lt;/li\u0026gt; {{- range seq (sub $lastHeaderLevel $firstHeaderLevel) -}} {{- if in ($.Scratch.Get \u0026#34;bareul\u0026#34;) (add . $firstHeaderLevel) }} \u0026lt;/ul\u0026gt; {{- else }} \u0026lt;/ul\u0026gt; \u0026lt;/li\u0026gt; {{- end -}} {{- end }} \u0026lt;/ul\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/details\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/aside\u0026gt; \u0026lt;script\u0026gt; let activeElement; let elements; let headerCounters = {}; // 重置所有计数器 function resetHeaderCounters() { headerCounters = {}; } // header计数器逻辑 function getHeaderNumber(element, headerLevel) { // 获取之前的所有标题元素 let prevElements = Array.from(document.querySelectorAll(\u0026#39;h1[id],h2[id],h3[id],h4[id],h5[id],h6[id]\u0026#39;)); let currentIndex = prevElements.indexOf(element); let counters = new Array(6).fill(0); // 初始化6级计数器 let numbers = []; for (let i = 0; i \u0026lt;= currentIndex; i++) { let currentElement = prevElements[i]; let currentLevel = parseInt(currentElement.tagName.substring(1)) - 1; // 转为0-based // 重置子级计数器 for (let l = currentLevel + 1; l \u0026lt; 6; l++) { counters[l] = 0; } // 递增当前级计数器 counters[currentLevel]++; // 如果是目标元素则记录编号 if (currentElement === element) { for (let l = 0; l \u0026lt;= currentLevel; l++) { if (counters[l] \u0026gt; 0) { numbers.push(counters[l]); } } break; } } return numbers.join(\u0026#39;.\u0026#39;); } // 更新目录项的显示 function updateTocDisplay(element, tocLink) { const headerLevel = parseInt(element.tagName.substring(1)); const currentNumber = getHeaderNumber(element, headerLevel); // 移除之前可能存在的编号 let linkText = tocLink.textContent; linkText = linkText.replace(/^\\d+(\\.\\d+)*\\s+/, \u0026#39;\u0026#39;); // 添加新的编号 tocLink.textContent = `${currentNumber} ${linkText}`; } // 获取元素的顶部偏移 function getOffsetTop(element) { if (!element.getClientRects().length) { return 0; } let rect = element.getBoundingClientRect(); let win = element.ownerDocument.defaultView; return rect.top + win.pageYOffset; } // 检查TOC位置 function checkTocPosition() { const width = document.body.scrollWidth; const main = parseInt(getComputedStyle(document.body).getPropertyValue(\u0026#39;--article-width\u0026#39;), 10); const toc = parseInt(getComputedStyle(document.body).getPropertyValue(\u0026#39;--toc-width\u0026#39;), 10); const gap = parseInt(getComputedStyle(document.body).getPropertyValue(\u0026#39;--gap\u0026#39;), 10); if (width - main - (toc * 2) - (gap * 4) \u0026gt; 0) { document.getElementById(\u0026#34;toc-container\u0026#34;).classList.add(\u0026#34;wide\u0026#34;); } else { document.getElementById(\u0026#34;toc-container\u0026#34;).classList.remove(\u0026#34;wide\u0026#34;); } } // 初始化时的处理 document.addEventListener(\u0026#39;DOMContentLoaded\u0026#39;, function (event) { checkTocPosition(); elements = document.querySelectorAll(\u0026#39;h1[id],h2[id],h3[id],h4[id],h5[id],h6[id]\u0026#39;); if (elements.length \u0026gt; 0) { // 设置第一个标题为活动状态 activeElement = elements[0]; const id = encodeURI(activeElement.getAttribute(\u0026#39;id\u0026#39;)).toLowerCase(); document.querySelector(`.inner ul li a[href=\u0026#34;#${id}\u0026#34;]`).classList.add(\u0026#39;active\u0026#39;); } // 初始化所有标题的编号 if (elements \u0026amp;\u0026amp; elements.length \u0026gt; 0) { elements.forEach(element =\u0026gt; { const id = encodeURI(element.getAttribute(\u0026#39;id\u0026#39;)).toLowerCase(); const tocLink = document.querySelector(`.inner ul li a[href=\u0026#34;#${id}\u0026#34;]`); if (tocLink) { updateTocDisplay(element, tocLink); } }); } // 添加返回顶部链接的事件监听 const topLink = document.getElementById(\u0026#39;top-link\u0026#39;); if (topLink) { topLink.addEventListener(\u0026#39;click\u0026#39;, (event) =\u0026gt; { event.preventDefault(); window.scrollTo({ top: 0, behavior: \u0026#39;smooth\u0026#39; }); }); } }, false); // 窗口大小改变时的处理 window.addEventListener(\u0026#39;resize\u0026#39;, function(event) { checkTocPosition(); }, false); // 滚动时的处理 window.addEventListener(\u0026#39;scroll\u0026#39;, () =\u0026gt; { const scrollPosition = window.pageYOffset || document.documentElement.scrollTop; if (scrollPosition === 0) { return; } if (elements \u0026amp;\u0026amp; elements.length \u0026gt; 0) { // 重置计数器 resetHeaderCounters(); // 查找当前可见的标题 activeElement = Array.from(elements).find((element) =\u0026gt; { if ((getOffsetTop(element) - scrollPosition) \u0026gt; 0 \u0026amp;\u0026amp; (getOffsetTop(element) - scrollPosition) \u0026lt; window.innerHeight / 2) { return element; } }) || activeElement; // 更新所有目录项的显示 elements.forEach(element =\u0026gt; { const id = encodeURI(element.getAttribute(\u0026#39;id\u0026#39;)).toLowerCase(); const tocLink = document.querySelector(`.inner ul li a[href=\u0026#34;#${id}\u0026#34;]`); if (tocLink) { updateTocDisplay(element, tocLink); if (element === activeElement) { tocLink.classList.add(\u0026#39;active\u0026#39;); tocLink.style.textDecoration = \u0026#34;underline\u0026#34;; // 确保当前激活的标题在目录中可见 const tocContainer = document.querySelector(\u0026#39;.toc .inner\u0026#39;); const linkOffsetTop = tocLink.offsetTop; const containerHeight = tocContainer.clientHeight; const linkHeight = tocLink.clientHeight; // 计算滚动位置，将当前目录项居中显示 const scrollPosition = linkOffsetTop - (containerHeight / 2) + (linkHeight / 2); tocContainer.scrollTo({ top: scrollPosition, behavior: \u0026#39;smooth\u0026#39; }); } else { tocLink.classList.remove(\u0026#39;active\u0026#39;); tocLink.style.textDecoration = \u0026#34;none\u0026#34;; } } }); } }, false); \u0026lt;/script\u0026gt; {{- end }} 创建assets/css/extended/toc.css，根据阅读内容滚动并加粗相应标题就由其实现。\nassets/css/extended/toc.css 88 lines /*目录侧边栏*/ :root { --nav-width: 1380px; --article-width: 650px; --toc-width: 300px; } .toc { margin: 0 2px 40px 2px; border: 1px solid var(--border); background: var(--entry); border-radius: var(--radius); padding: 0.4em; } .toc-container.wide { position: absolute; height: 100%; border-right: 1px solid var(--border); left: calc((var(--toc-width) + var(--gap)) * -1); top: calc(var(--gap) * 2); width: var(--toc-width); } .wide .toc { position: sticky; top: var(--gap); border: unset; background: unset; border-radius: unset; width: 100%; margin: 0 2px 40px 2px; } .toc details summary { cursor: zoom-in; margin-inline-start: 20px; padding: 12px 0; } .toc details[open] summary { font-weight: 500; } .toc-container.wide .toc .inner { margin: 0; } .active { font-size: 110%; font-weight: 600; } .toc ul { list-style-type: circle; } .toc .inner { margin: 0 0 0 20px; padding: 0px 15px 15px 20px; font-size: 16px; /*目录显示高度*/ max-height: 83vh; overflow-y: auto; } .toc .inner::-webkit-scrollbar-thumb { /*滚动条*/ background: var(--border); border: 7px solid var(--theme); border-radius: var(--radius); } .toc li ul { margin-inline-start: calc(var(--gap) * 0.5); list-style-type: none; } .toc li { list-style: none; font-size: 0.95rem; padding-bottom: 5px; } .toc li a:hover { color: var(--secondary); } /*目录侧边栏*/ 评论支持 对于评论支持，我选择了 Giscus↗ 。由于本博客也是部署在Github上，在减少额外操作的同时 Giscus 也显得足够的优雅简单。\n此处操作参考了 Hugo 博客引入 Giscus 评论系统↗ 。\nGiscus↗ -\u0026gt; 进入配置栏 配置 -\u0026gt; 仓库 -\u0026gt; 填入仓库名，如 Downmars/Downmars.github.io↗ -\u0026gt; 若不满足条件，分别查看：对应仓库是否公开、giscus app 是否安装、 Discussions 功能在对应仓库是否启用 配置 -\u0026gt; Discussions 分类 -\u0026gt; 选中Announcements 配置 -\u0026gt; 启用giscus -\u0026gt; 复制相应字段到配置中 同时需要创建 layouts/partials/comments.html，此处参考了 Hugo + PaperMod + Github Pages 搭建一个完善的个人博客(以 Windows11 为例)↗ 。\nlayouts/partials/comments.html 53 lines {{- /* Comments area start */ -}} {{- /* to add comments read =\u0026gt; https://gohugo.io/content-management/comments/ */ -}} \u0026lt;div id=\u0026#34;tw-comment\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;script\u0026gt; // 默认是暗色，根目录下的配置中的主题默认也是暗色 const getStoredTheme = () =\u0026gt; localStorage.getItem(\u0026#34;pref-theme\u0026#34;) === \u0026#34;light\u0026#34; ? \u0026#34;{{ .Site.Params.giscus.lightTheme }}\u0026#34; : \u0026#34;{{ .Site.Params.giscus.darkTheme }}\u0026#34;; const setGiscusTheme = () =\u0026gt; { const sendMessage = (message) =\u0026gt; { const iframe = document.querySelector(\u0026#39;iframe.giscus-frame\u0026#39;); if (iframe) { iframe.contentWindow.postMessage({giscus: message}, \u0026#39;https://giscus.app\u0026#39;); } } sendMessage({setConfig: {theme: getStoredTheme()}}) } document.addEventListener(\u0026#34;DOMContentLoaded\u0026#34;, () =\u0026gt; { const giscusAttributes = { \u0026#34;src\u0026#34;: \u0026#34;https://giscus.app/client.js\u0026#34;, \u0026#34;data-repo\u0026#34;: \u0026#34;{{ .Site.Params.giscus.repo }}\u0026#34;, \u0026#34;data-repo-id\u0026#34;: \u0026#34;{{ .Site.Params.giscus.repoId }}\u0026#34;, \u0026#34;data-category\u0026#34;: \u0026#34;{{ .Site.Params.giscus.category }}\u0026#34;, \u0026#34;data-category-id\u0026#34;: \u0026#34;{{ .Site.Params.giscus.categoryId }}\u0026#34;, \u0026#34;data-mapping\u0026#34;: \u0026#34;{{ .Site.Params.giscus.mapping }}\u0026#34;, \u0026#34;data-strict\u0026#34;: \u0026#34;{{ .Site.Params.giscus.strict }}\u0026#34;, \u0026#34;data-reactions-enabled\u0026#34;: \u0026#34;{{ .Site.Params.giscus.reactionsEnabled }}\u0026#34;, \u0026#34;data-emit-metadata\u0026#34;: \u0026#34;{{ .Site.Params.giscus.emitMetadata }}\u0026#34;, \u0026#34;data-input-position\u0026#34;: \u0026#34;{{ .Site.Params.giscus.inputPosition }}\u0026#34;, \u0026#34;data-theme\u0026#34;: getStoredTheme(), \u0026#34;data-lang\u0026#34;: \u0026#34;{{ .Site.Params.giscus.lang }}\u0026#34;, \u0026#34;data-loading\u0026#34;: \u0026#34;lazy\u0026#34;, \u0026#34;crossorigin\u0026#34;: \u0026#34;anonymous\u0026#34;, }; // 动态创建 giscus script const giscusScript = document.createElement(\u0026#34;script\u0026#34;); Object.entries(giscusAttributes).forEach( ([key, value]) =\u0026gt; giscusScript.setAttribute(key, value)); document.querySelector(\u0026#34;#tw-comment\u0026#34;).appendChild(giscusScript); // 页面主题变更后，变更 giscus 主题 const themeSwitcher = document.querySelector(\u0026#34;#theme-toggle\u0026#34;); if (themeSwitcher) { themeSwitcher.addEventListener(\u0026#34;click\u0026#34;, setGiscusTheme); } const themeFloatSwitcher = document.querySelector(\u0026#34;#theme-toggle-float\u0026#34;); if (themeFloatSwitcher) { themeFloatSwitcher.addEventListener(\u0026#34;click\u0026#34;, setGiscusTheme); } }); \u0026lt;/script\u0026gt; {{- /* Comments area end */ -}} 网站图标 咱们一个自己的博客肯定得需要有自己的一个网站图标，可以将图标放在/static/images/，如favicon: \u0026quot;/images/blog.png\u0026quot;。我在这里推荐两个网站供大家用来查找符合自己图标。\nfontawesome↗ flaticon↗ icons8↗ iconfinder↗ Noun Project↗ 多语言 \u0026amp; 界面布置 这部分参考来自于 Hugo 多语言博客搭建，如何优雅地管理多语言 md 内容-贤民↗ 。\n我认为对于编写博客的我们来说，以时间的形式来分隔是很好的一种方式来存储以及管理我们的博客，使用统一文件命名规范YYYYMMDD-title.md。此外，有兴趣的可以做一下多语言的准备，即使现在没有推出多语言的打算，之后可以集中找个时间来使用ai工具来统一做一下。\ntree . 16 lines . ├── en │ ├── archives │ │ └── archives.md │ ├── posts │ │ └── 2025_01_19-hugo_build_1.md │ └── search │ └── search.md └── zh ├── archives │ └── archives.md ├── posts │ ├── 2025_01_19-hugo_build_1.md │ └── 2025_01_20-hugo_build_2.md └── search └── search.md 可以参考我的示例结构，在这里我将zh/和en/作为post/的直接子目录，这一步需在对应的语言下添加设置对应的文档目录，如contentDir: \u0026quot;content/zh\u0026quot;。\n我们在此处同时需要设置页面布局，创建zh/archives/archives.md和zh/search/search.md，\nzh/archives/archives.md 5 lines --- title: \u0026#34;时间轴\u0026#34; layout: \u0026#34;archives\u0026#34; summary: archives --- zh/search/search.md 5 lines --- title: \u0026#34;搜索\u0026#34; # in any language you want layout: \u0026#34;search\u0026#34; # is necessary summary: \u0026#34;search\u0026#34; --- 其中layout字段指定了这个页面使用的模板，默认使用的是themes\\\u0026lt;hugo_theme\u0026gt;\\layouts\\_default\\archives.html\u0026amp;search.html，所以我们使用默认字段search和archives即可以让归档内容正常显示。\n同时，参考 Hugo + PaperMod + Github Pages 搭建一个完善的个人博客(以 Windows11 为例)↗ 搜索需要额外加入如下配置：\nhugo.yaml 20 lines params: # 搜索 fuseOpts: # 个性化配置 refer: https://sonnycalcr.github.io/posts/build-a-blog-using-hugo-papermod-github-pages/#%e9%85%8d%e7%bd%ae%e6%90%9c%e7%b4%a2 isCaseSensitive: false # 是否大小写敏感 shouldSort: true # 是否排序 location: 0 distance: 1000 threshold: 0.4 minMatchCharLength: 0 # limit: 10 # refer: https://www.fusejs.io/api/methods.html#search keys: [\u0026#34;title\u0026#34;, \u0026#34;permalink\u0026#34;, \u0026#34;summary\u0026#34;, \u0026#34;content\u0026#34;] includeMatches: true # ...... outputs: home: - HTML - RSS - JSON # Required for search (搜索功能需要) 接着，我们在配置文件中加入时间轴与搜索的布局即可：\nhugo.yaml 13 lines # Multilingual Support (多语言支持) languages: zh: languageCode: \u0026#34;zh-CN\u0026#34; languageName: \u0026#34;简体中文\u0026#34; contentDir: \u0026#34;content/zh\u0026#34; weight: 1 menu: main: - identifier: posts name: \u0026#34;Posts\u0026#34; url: \u0026#34;/posts/\u0026#34; weight: 1 渲染配置 代码配置 PaperMod主题使用的代码高亮工具为 Chroma↗ ，可能不太聪明，但是对于我的日常使用暂时没有太大问题。 我在后面换了个代码渲染方式。\nChroma自带的配色方案预览： https://xyproto.github.io/splash/docs/longer/all.html↗ 参考于： 深入探究 Hugo 代码高亮↗ 、 代码块语法高亮及复制↗ hugo.yaml 7 lines markup: highlight: codeFences: true guessSyntax: true lineNos: true style: dracula lineNumbersInTable: true 我这里参考了 Hugo PaperMod 主题精装修↗ 的代码渲染方式，在其中选择了 atom-one-dark/light↗ 与 atom-one-dark.css↗ 。\n为了覆盖掉原主题对于代码渲染的设置，我们需要创建assets/css/hljs/an-old-hope.min.css，并且在其中复制进去黑色主题和白色主题的配置，白色主题直接复制进去皆可，黑色主题需要以以下形式进行限定：\nassets/css/hljs/an-old-hope.min.css 7 lines body.dark { .hljs { color: #abb2bf; background: #282c34; } ... } 接着，我们需要修改白色与黑色主题的背景色，同时由于我参考的博主使用了Consolas 和霞鹜文楷（注释的中文字体），字体可以从 博主的仓库↗ 中获取。\n我们在assets/css/extended/blank.css中添加：\nassets/css/extended/blank.css 29 lines @font-face { font-family: \u0026#34;Consolas\u0026#34;; src: url(\u0026#34;/fonts/Consolas.woff2\u0026#34;); } code { font-family: \u0026#34;Consolas\u0026#34;, \u0026#34;LXGWWenKaiScreenR\u0026#34;; } .post-content code { margin: auto 4px; padding: 4px 6px; font-size: 0.8em; line-height: 1.5; background: var(--code-bg); } .post-content pre code { display: block; margin: auto 0; padding: 10px; background: var(--hljs-bg) !important; color: var(--content); border-radius: var(--radius); overflow-x: auto; word-break: break-all; font-family: \u0026#34;Consolas\u0026#34;, \u0026#34;LXGWWenKaiScreenR\u0026#34;; font-size: 15px; } 并且，在PaperMod中的颜色变量配置assets/css/core/theme-vars.css 中添加配置：\nassets/css/core/theme-vars.css 12 lines /* 省略的内容请拷贝原先主题对应的文件 */ :root { ... --hljs-bg: #f7f7f7; --code-bg: rgb(245, 245, 245); } .dark { ... --hljs-bg: rgb(46, 46, 51); --code-bg: rgb(55, 56, 62); } 此外，PaperMod 默认的代码复制键的在对应语言下是不同的文字表示复制粘贴，我觉的不够优雅，于是打算使用图标来代替。关于复制符号的配置在layouts/partials/footer.html 中：\nlayouts/partials/footer.html 8 lines copybutton.innerHTML = \u0026#39;{{- i18n \u0026#34;code_copy\u0026#34; | default \u0026#34;copy\u0026#34; }}\u0026#39;; function copyingDone() { copybutton.innerHTML = \u0026#39;{{- i18n \u0026#34;code_copied\u0026#34; | default \u0026#34;copied!\u0026#34; }}\u0026#39;; setTimeout(() =\u0026gt; { copybutton.innerHTML = \u0026#39;{{- i18n \u0026#34;code_copy\u0026#34; | default \u0026#34;copy\u0026#34; }}\u0026#39;; }, 2000); } 修改为：\nlayouts/partials/footer.html 26 lines copybutton.innerHTML = ` \u0026lt;img src=\u0026#34;/images/copy.svg\u0026#34; alt=\u0026#34;复制\u0026#34; class=\u0026#34;copy-icon\u0026#34; width=\u0026#34;16\u0026#34; height=\u0026#34;16\u0026#34;\u0026gt; `; function copyingDone() { copybutton.innerHTML = ` \u0026lt;img src=\u0026#34;/images/check.svg\u0026#34; alt=\u0026#34;已复制\u0026#34; class=\u0026#34;copied-icon\u0026#34; width=\u0026#34;16\u0026#34; height=\u0026#34;16\u0026#34;\u0026gt; `; setTimeout(() =\u0026gt; { copybutton.innerHTML = ` \u0026lt;img src=\u0026#34;/images/copy.svg\u0026#34; alt=\u0026#34;复制\u0026#34; class=\u0026#34;copy-icon\u0026#34; width=\u0026#34;16\u0026#34; height=\u0026#34;16\u0026#34;\u0026gt; `; }, 2000); } 我这里在存放的图片位于static/images/，大家可以选择自己的路径。由于编译为静态博客之后，static/images/变为public/images/，同时以public/当作根目录，所以我在代码中使用/images/check.svg\u0026amp;copy.svg。\n接下来，我们配置复制图标样式，在assets/css/extend.css中添加以下代码：\nassets/css/extend.css 20 lines /*copy_button*/ .copy-code { background: transparent; border: none; cursor: pointer; padding: 4px; position: absolute; right: 10px; top: -2px; } .copy-code img { opacity: 0.6; transition: opacity 0.3s, filter 0.3s; /* 添加 filter 过渡效果 */ } .copy-code:hover img { opacity: 1; filter: invert(100%); /* 颜色翻转效果 */ } 我这里使用的是底色为黑色的svg图标，所以我这里做了反色处理。\n接下来我们配置代码折叠，对于过长的代码段，十分影响阅读者的感受，参考于 Hugo PaperMod 主题精装修↗ ，我们需要在layouts/shortcodes/collapse.html中加入以下内容：\nlayouts/shortcodes/collapse.html 8 lines {{ if .Get \u0026#34;summary\u0026#34; }} {{ else }} {{ warnf \u0026#34;missing value for param \u0026#39;summary\u0026#39;: %s\u0026#34; .Position }} {{ end }} \u0026lt;p\u0026gt;\u0026lt;details {{ if (eq (.Get \u0026#34;openByDefault\u0026#34;) true) }} open=true {{ end }}\u0026gt; \u0026lt;summary markdown=\u0026#34;span\u0026#34;\u0026gt;{{ .Get \u0026#34;summary\u0026#34; | markdownify }}\u0026lt;/summary\u0026gt; {{ .Inner | markdownify }} \u0026lt;/details\u0026gt;\u0026lt;/p\u0026gt; 额外配置 字体配置 我已经忍这个默认字体很久了，现在我们就在这里干掉他。我们在这里选择的中文是 霞鹜文楷↗ ，英文是 Apple 的字体 SF Pro Text Regular 来渲染，方法参考于： Hugo PaperMod 主题精装修↗ 。\n在assets/css/extended/blank.css中加入：\nassets/css/extended/blank.css 19 lines @font-face { font-family: \u0026#34;LXGWWenKaiScreenR\u0026#34;; src: url(\u0026#34;/fonts/lxgwwenkaiscreen.subset.v1.235.standard.woff2\u0026#34;); } /* https://www.webfontfree.com/cn/download/SFProText-Regular */ @font-face { font-family: \u0026#34;SFProText-Regular\u0026#34;; src: url(\u0026#34;/fonts/SFProText-Regular.woff2\u0026#34;); } body { font-family: \u0026#34;SFProText-Regular\u0026#34;, \u0026#34;LXGWWenKaiScreenR\u0026#34;; font-size: 16px; line-height: 1.6; word-break: break-word; background: var(--theme); font-display: swap; } 字体可以从我上面提及博主的 github仓库↗ 处获取。\n知识共享协议 参考于: Hugo+PaperMod 双语博客搭建 Home-Info+Profile Mode↗ 、 Hugo ʕ•ᴥ•ʔ Bear Blog↗ 我们在 Creative Commons许可证↗ 中选择使用的知识共享协议，我这里选择的是CC-BY-NC-4协议，并添加一个协议模组来自动呈现：\n首先创建文件data/licenses.html并添加\ndata/licenses.html 14 lines # data/licenses.yml CC-BY-NC-4.0: name: \u0026#34;CC BY-NC 4.0\u0026#34; url: \u0026#34;https://creativecommons.org/licenses/by-nc/4.0/\u0026#34; icons: \u0026amp;cc_icons # 锚点复用图标列表 - cc.svg - by.svg - nc.svg # 其他协议 CC-BY-SA-4.0: name: \u0026#34;CC BY-SA 4.0\u0026#34; url: \u0026#34;https://creativecommons.org/licenses/by-sa/4.0/\u0026#34; icons: *cc_icons # 复用图标列表 其次，创建文件layouts/partials/license.html并添加：\nlayouts/partials/license.html 35 lines \u0026lt;hr\u0026gt; \u0026lt;!-- 添加分割线 --\u0026gt; {{ $license := index site.Data.licenses .Params.license }} {{ if $license }} \u0026lt;div class=\u0026#34;license-declaration\u0026#34; vocab=\u0026#34;https://schema.org/\u0026#34; typeof=\u0026#34;CreativeWork\u0026#34;\u0026gt; {{/* 自动检测主题模式 */}} {{ $theme := \u0026#34;light\u0026#34; }} {{ if or (eq .Site.Params.colorTheme \u0026#34;dark\u0026#34;) (in .Site.Params.colorTheme \u0026#34;auto\u0026#34;) }} {{ $theme = \u0026#34;dark\u0026#34; }} {{ end }} \u0026lt;meta property=\u0026#34;name\u0026#34; content=\u0026#34;{{ .Title }}\u0026#34;\u0026gt; \u0026lt;link property=\u0026#34;copyrightHolder\u0026#34; href=\u0026#34;{{ .Site.BaseURL }}#author\u0026#34; /\u0026gt; \u0026lt;p\u0026gt; \u0026lt;span property=\u0026#34;license\u0026#34; content=\u0026#34;{{ $license.url }}\u0026#34;\u0026gt;本文采用\u0026lt;/span\u0026gt; \u0026lt;a href=\u0026#34;{{ $license.url }}\u0026#34; target=\u0026#34;_blank\u0026#34; rel=\u0026#34;license noopener noreferrer\u0026#34; class=\u0026#34;license-badge\u0026#34; data-theme=\u0026#34;{{ $theme }}\u0026#34; \u0026gt; {{ $license.name }} {{ range $icon := $license.icons }} \u0026lt;img src=\u0026#34;https://mirrors.creativecommons.org/presskit/icons/{{ $icon }}\u0026#34; alt=\u0026#34;{{ $icon | replaceRE `\\.svg$` `` | upper }} 图标\u0026#34; class=\u0026#34;license-icon\u0026#34; loading=\u0026#34;lazy\u0026#34; decoding=\u0026#34;async\u0026#34; \u0026gt; {{ end }} \u0026lt;/a\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/div\u0026gt; {{ end }} 接下来，创建文件assets/extended/custom.css并添加：\nassets/extended/custom.css 60 lines /* licenses.css */ .license-badge { --bg-light: #f8f9fa; --bg-dark: #2b2d32; --text-light: #212529; --text-dark: #f8f9fa; display: inline-flex; align-items: center; gap: 6px; padding: 8px 16px; border-radius: 6px; font-size: 0.9em; transition: all 0.3s ease; /* 默认浅色主题 */ background: var(--bg-light); color: var(--text-light); border: 1px solid rgba(0,0,0,0.1); } .license-icon { height: 24px; width: auto; transition: filter 0.3s ease; } /* 深色主题检测 */ @media (prefers-color-scheme: dark) { .license-badge:not([data-theme=\u0026#34;light\u0026#34;]) { background: var(--bg-dark); color: var(--text-dark); border-color: rgba(255,255,255,0.1); \u0026amp; .license-icon { filter: invert(1) hue-rotate(180deg); /* 更自然的反色 */ } } } /* 强制深色模式 */ .license-badge[data-theme=\u0026#34;dark\u0026#34;] { background: var(--bg-dark); color: var(--text-dark); border-color: rgba(255,255,255,0.1); \u0026amp; .license-icon { filter: invert(1) hue-rotate(180deg); } } /* 悬停效果 */ .license-badge:hover { transform: translateY(-1px); box-shadow: 0 2px 8px rgba(0,0,0,0.1); \u0026amp;[data-theme=\u0026#34;dark\u0026#34;]:hover { box-shadow: 0 2px 8px rgba(255,255,255,0.1); } } 最后，在archetypes/default.md中添加以下代码段即可实现一个自动添加的开源协议呈现模组。\narchetypes/default.md 1 lines license: \u0026#34;CC-BY-NC-4.0\u0026#34; # 你对应使用的协议 呈现效果如下：\nCC-BY-NC-4 但是，由于我对于前端不是很了解，黑夜模式下的样式调整未能正确实现，待解决。\n修改时间 原本主题并没有显示「修改时间」的功能，我在这里参考了 Hugo PaperMod 主题精装修↗ 。\n在layouts/partials/post_meta.html中添加以下内容，参考的博客中$scratch.Add错误被包裹在()中，并且行末还有一个多余的$，我在此做了修改：\nlayouts/partials/post_meta.html 5 lines {{- if (.Param \u0026#34;ShowLastMod\u0026#34;) -}} {{- if ne (.Lastmod.Format \u0026#34;2006-01-02\u0026#34;) (.Date.Format \u0026#34;2006-01-02\u0026#34;) -}} {{- $scratch.Add \u0026#34;meta\u0026#34; (slice (printf \u0026#34;Updated:\u0026amp;nbsp;%s\u0026#34; (.Lastmod.Format (.Site.Params.dateFormat | default \u0026#34;January 2, 2006\u0026#34;)))) -}} {{- end -}} {{- end -}} 并且，在hugo.yaml中加入：\nhugo.yaml 2 lines params: showLastMod: true 同时，我们在archetypes/default.md中的配置如下：\narchetypes/default.md 5 lines --- title: \u0026#34;{{ replace .Name \u0026#34;-\u0026#34; \u0026#34; \u0026#34; | title }}\u0026#34; date: {{ .Date }} lastmod: {{ .Date }} --- 等我过几天看看这个效果咋样。\nMarginNote 在这里十分感谢 Yunpeng Tai↗ 的博客，我从上面学习和摘选了很多内容在本文中。\n我们在assets/extended/custom.css：\nassets/extended/custom.css 30 lines .sidenote { float: right; position: relative; margin-right: -18vw; width: 40%; max-width: 200px; } body { counter-reset: sidenote-counter; } .sidenote-number { counter-increment: sidenote-counter; } .sidenote::before { content: \u0026#34;# \u0026#34;; position: relative; font-size: 0.9em; font-weight: 700; color: red; } .sidenote-number::after { content: \u0026#34;#\u0026#34;; vertical-align: super; font-size: 0.8em; font-weight: 700; color: #409dff; } .sidenote-number:hover .sidenote { background-color: var(--sidenote-bg); } 同时，在layouts/shortcodes/sidenote.html中添加以下内容：\nlayouts/shortcodes/sidenote.htm 1 lines \u0026lt;span class=\u0026#34;sidenote-number\u0026#34;\u0026gt;\u0026lt;small class=\u0026#34;sidenote\u0026#34;\u0026gt;{{ .Inner | markdownify }}\u0026lt;/small\u0026gt;\u0026lt;/span\u0026gt; 这是示例 这是示例的侧边注解 盘古之白 「盤古之白」↗ 一文中讨论到，所有的中文字和半形的英文、數字、符號之間应该存在的空白，被漢學家稱為「盤古之白」，因為它劈開了全形字和半形字之間的混沌。\n我们需要在layouts/partials/extend_footer.html中加入：\nlayouts/partials/extend_footer.html 18 lines {{- $highlight := resources.Get \u0026#34;js/pangu.min.js\u0026#34; -}} \u0026lt;script\u0026gt; (function (u, c) { var d = document, t = \u0026#34;script\u0026#34;, o = d.createElement(t), s = d.getElementsByTagName(t)[0]; o.src = u; if (c) { o.addEventListener(\u0026#34;load\u0026#34;, function (e) { c(e); }); } s.parentNode.insertBefore(o, s); })(\u0026#34;{{ $highlight.RelPermalink }}\u0026#34;, function () { pangu.spacingPage(); }); \u0026lt;/script\u0026gt; 同时，需要创建assets/js/pangu.min.js，网站加载时，盘古之白自动加载，大家可以从此处下载。\nBlockquote 参考于： Hugo PaperMod 主题精装修↗ 为什么要演奏春日影！\n在 layouts/shortcodes/quote.html 加入以下内容： layouts/shortcodes/quote.html 8 lines \u0026lt;blockquote class=\u0026#34;quote{{ range .Params }} {{ . }}{{ end }}\u0026#34;\u0026gt; {{- $content := .Inner | markdownify -}} {{- if not (strings.HasPrefix $content \u0026#34;\u0026lt;p\u0026gt;\u0026#34;) -}} {{ printf \u0026#34;\u0026lt;p\u0026gt;%s\u0026lt;/p\u0026gt;\u0026#34; $content | safeHTML }} {{- else -}} {{ $content }} {{- end -}} \u0026lt;/blockquote\u0026gt; 我们在assets/css/extended/quote.css中加入以下内容：\nassets/css/extended/quote.css 32 lines blockquote.quote { position: relative; margin: 1em auto; padding-left: 3em; border: none; } blockquote.quote::before { position: absolute; left: 0; content: \u0026#34;“\u0026#34;; font-size: 3em; font-weight: bold; line-height: 1; } blockquote.quote-copyright { position: relative; margin: 2em auto; padding-left: 3em; border: none; background-color: aliceblue; } blockquote.quote-copyright::before { position: absolute; left: 0; content: \u0026#34;“\u0026#34;; font-size: 3em; font-weight: bold; line-height: 1; } Shortcodes大赏 hugo采用markdown的格式进行内容创作，但是当我们需要一些特殊功能的时候，markdown并不能满足我们的需求。我们在这个时候可能需要插入一些html代码，这对于整个markdown的格式与可读性都是很糟糕的。幸运的是，hugo给我们提供了简码(Shortcodes)功能，在我们准备好对应的简码模板与简码，这能够在使用简码的时候，将hugo自动转换为html语言，我们就能够使用很简码的样式来实现需要的特殊功能。\n关于Shortcodes的相关知识可以参考 Shortcodes templates↗ ，大家可以自行前往查看。\n图像放大 {{\u0026lt; figure src=\u0026quot;/path/to/image.jpg\u0026quot; alt=\u0026quot;A beautiful image\u0026quot; title=\u0026quot;Image\u0026quot; caption=\u0026quot;This is a caption for the image\u0026quot; align=\u0026quot;center\u0026quot; width=600px height=300px \u0026gt;}}\nSonny_boyThis is a caption for the image\n自动折叠代码 {{\u0026lt; collapse summary=\u0026quot;test\u0026quot; \u0026gt;}} {代码段} {{\u0026lt; /collapse \u0026gt;}}\ntest 1 lines test 侧边注解 这是示例 {{\u0026lt; sidenote \u0026gt;}} 这是示例的侧边注解 {{\u0026lt; /sidenote \u0026gt;}}\n这是示例 这是示例的侧边注解 引用 {{\u0026lt; quote \u0026gt;}} {引用段} {{\u0026lt; /quote \u0026gt;}}\n为什么要演奏春日影！\n转义渲染 参考于： 如何在代码块里内嵌 HUGO 的简码 (SHORTCODES) | 消夏錄↗ ，由于Shortcodes代码会被hugo直接转义为对应的功能，所以我们需要将Shortcodes的括号内加入/* */防止转义。我们需要在markdown中输入：\n{{\u0026lt;/* myshortcode */\u0026gt;}} 渲染结果：\n{{\u0026lt; myshortcode \u0026gt;}} Asciinema {{\u0026lt; asciinema ID \u0026gt;}}\ntest 回到顶部 + 鸟宿池边树，僧敲月下门 - 鸟宿池边树，僧推月下门 test\ntest\ntest\n我的知乎↗ 这是一个简单的脚注1，这是另一个脚注2。\n这是第一个脚注\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n这是第二脚注\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://downmars.github.io/zh/posts/2025_01_20-hugo_build_2/","summary":"\u003ch2 id=\"前言\"\u003e前言\u003c/h2\u003e\n\u003cp\u003e在上一篇文章“\u003ca href=\"../hugo_build_1\" \n   \n   \u003e\n   Hugo博客搭建_基础 😊\u003c/a\u003e\n\n\n\n\n”中，我们讲解了如何搭建一个Hugo博客，这一篇文章将会讲解如何配置Hugo博客。\u003c/p\u003e\n\u003ch2 id=\"基础配置文件\"\u003e基础配置文件\u003c/h2\u003e\n\u003cp\u003e我们曾经在\u003ccode\u003ehugo.yaml\u003c/code\u003e中配置本博客的一些功能，我们将会在这一部分补充和讨论剩余的配置：\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n\n\n\n\n\n\n\n\n\u003cp\u003e\u003cdetails class=\"custom-collapse\" \u003e\n  \u003csummary markdown=\"span\"\u003e\n    \u003cspan\u003ehugo.yaml\u003c/span\u003e\n    \u003cspan class=\"line-count\"\u003e101 lines\u003c/span\u003e\n  \u003c/summary\u003e\n  \u003cdiv class=\"content\"\u003e\n    \u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#6272a4\"\u003e# Basic Configuration (基础配置)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ff79c6\"\u003ebaseURL\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e               \u003cspan style=\"color:#6272a4\"\u003e# Site URL (网站 URL)(e.g. https://downmars.github.io/)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ff79c6\"\u003etitle\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e                \u003cspan style=\"color:#6272a4\"\u003e# Site title (网站标题)(e.g. DLog)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ff79c6\"\u003etheme\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e                \u003cspan style=\"color:#6272a4\"\u003e# Theme name (主题名称)(e.g. PaperMod, in /themes/)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#6272a4\"\u003e# Feature Toggles (功能开关)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ff79c6\"\u003eenableEmoji\u003c/span\u003e: \u003cspan style=\"color:#ff79c6\"\u003etrue\u003c/span\u003e         \u003cspan style=\"color:#6272a4\"\u003e# Enable emoji support (启用表情支持)(e.g. https://gohugo.io/quick-reference/emojis/#smileys--emotion)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ff79c6\"\u003eenableRobotsTXT\u003c/span\u003e: \u003cspan style=\"color:#ff79c6\"\u003etrue\u003c/span\u003e     \u003cspan style=\"color:#6272a4\"\u003e# Enable search engine support (启用搜索引擎支持)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ff79c6\"\u003ehasCJKLanguage\u003c/span\u003e: \u003cspan style=\"color:#ff79c6\"\u003etrue\u003c/span\u003e      \u003cspan style=\"color:#6272a4\"\u003e# Enable CJK language support (启用中日韩语言支持)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ff79c6\"\u003ebuildDrafts\u003c/span\u003e: \u003cspan style=\"color:#ff79c6\"\u003efalse\u003c/span\u003e        \u003cspan style=\"color:#6272a4\"\u003e# Build draft posts (是否构建草稿文章)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ff79c6\"\u003ebuildFuture\u003c/span\u003e: \u003cspan style=\"color:#ff79c6\"\u003efalse\u003c/span\u003e        \u003cspan style=\"color:#6272a4\"\u003e# Build future posts (是否构建未来日期文章) \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ff79c6\"\u003ebuildExpired\u003c/span\u003e: \u003cspan style=\"color:#ff79c6\"\u003efalse\u003c/span\u003e       \u003cspan style=\"color:#6272a4\"\u003e# Build expired posts (是否构建过期文章)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#6272a4\"\u003e# Parameters Configuration (参数配置)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ff79c6\"\u003eparams\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#6272a4\"\u003e# Theme Settings (主题设置)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#ff79c6\"\u003edefaultTheme\u003c/span\u003e: dark      \u003cspan style=\"color:#6272a4\"\u003e# Default theme mode (默认主题模式)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#ff79c6\"\u003edisableThemeToggle\u003c/span\u003e: \u003cspan style=\"color:#ff79c6\"\u003efalse\u003c/span\u003e \u003cspan style=\"color:#6272a4\"\u003e# Allow theme switching (允许主题切换)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#6272a4\"\u003e# Display Features (显示功能)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#ff79c6\"\u003eShowShareButtons\u003c/span\u003e: \u003cspan style=\"color:#ff79c6\"\u003etrue\u003c/span\u003e    \u003cspan style=\"color:#6272a4\"\u003e# Show social share buttons (显示分享按钮)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#ff79c6\"\u003eShowCodeCopyButtons\u003c/span\u003e: \u003cspan style=\"color:#ff79c6\"\u003etrue\u003c/span\u003e \u003cspan style=\"color:#6272a4\"\u003e# Show code copy buttons (显示代码复制按钮)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#ff79c6\"\u003eShowReadingTime\u003c/span\u003e: \u003cspan style=\"color:#ff79c6\"\u003etrue\u003c/span\u003e    \u003cspan style=\"color:#6272a4\"\u003e# Show reading time estimate (显示阅读时间)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#ff79c6\"\u003eShowWordCount\u003c/span\u003e: \u003cspan style=\"color:#ff79c6\"\u003etrue\u003c/span\u003e      \u003cspan style=\"color:#6272a4\"\u003e# Show word count (显示字数统计)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#ff79c6\"\u003eShowPostNavLinks\u003c/span\u003e: \u003cspan style=\"color:#ff79c6\"\u003etrue\u003c/span\u003e   \u003cspan style=\"color:#6272a4\"\u003e# Show post navigation (显示文章导航)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#ff79c6\"\u003eShowBreadCrumbs\u003c/span\u003e: \u003cspan style=\"color:#ff79c6\"\u003etrue\u003c/span\u003e    \u003cspan style=\"color:#6272a4\"\u003e# Show breadcrumb navigation (显示面包屑导航)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#ff79c6\"\u003eShowToc\u003c/span\u003e: \u003cspan style=\"color:#ff79c6\"\u003etrue\u003c/span\u003e           \u003cspan style=\"color:#6272a4\"\u003e# Show table of contents (显示目录)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#ff79c6\"\u003eTocOpen\u003c/span\u003e: \u003cspan style=\"color:#ff79c6\"\u003etrue\u003c/span\u003e          \u003cspan style=\"color:#6272a4\"\u003e# TOC expanded by default (目录默认展开)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#ff79c6\"\u003emath\u003c/span\u003e: \u003cspan style=\"color:#ff79c6\"\u003etrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#ff79c6\"\u003efancybox\u003c/span\u003e: \u003cspan style=\"color:#ff79c6\"\u003etrue\u003c/span\u003e \u003cspan style=\"color:#6272a4\"\u003e# Display Images (显示图片)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e \u003cspan style=\"color:#6272a4\"\u003e# Comment System (评论系统)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#ff79c6\"\u003ecomments\u003c/span\u003e: \u003cspan style=\"color:#ff79c6\"\u003etrue\u003c/span\u003e          \u003cspan style=\"color:#6272a4\"\u003e# Enable comments (启用评论)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#ff79c6\"\u003egiscus\u003c/span\u003e:                \u003cspan style=\"color:#6272a4\"\u003e# Giscus configuration (Giscus 配置)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#ff79c6\"\u003erepo\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#ff79c6\"\u003erepoId\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#ff79c6\"\u003ecategory\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#ff79c6\"\u003ecategoryId\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#ff79c6\"\u003emapping\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;pathname\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#ff79c6\"\u003estrict\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;0\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#ff79c6\"\u003ereactionsEnabled\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;1\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#ff79c6\"\u003eemitMetadata\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;0\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#ff79c6\"\u003einputPosition\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;bottom\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#ff79c6\"\u003elightTheme\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;light\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#ff79c6\"\u003edarkTheme\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;dark\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#ff79c6\"\u003elang\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;zh-CN\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#ff79c6\"\u003ecrossorigin\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;anonymous\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#ff79c6\"\u003efuseOpts: # refer\u003c/span\u003e: https://sonnycalcr.github.io/posts/build-a-blog-using-hugo-papermod-github-pages/#%e9%85%8d%e7%bd%ae%e6%90%9c%e7%b4%a2\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#ff79c6\"\u003eisCaseSensitive\u003c/span\u003e: \u003cspan style=\"color:#ff79c6\"\u003efalse\u003c/span\u003e \u003cspan style=\"color:#6272a4\"\u003e# 是否大小写敏感\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#ff79c6\"\u003eshouldSort\u003c/span\u003e: \u003cspan style=\"color:#ff79c6\"\u003etrue\u003c/span\u003e \u003cspan style=\"color:#6272a4\"\u003e# 是否排序\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#ff79c6\"\u003elocation\u003c/span\u003e: \u003cspan style=\"color:#bd93f9\"\u003e0\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#ff79c6\"\u003edistance\u003c/span\u003e: \u003cspan style=\"color:#bd93f9\"\u003e1000\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#ff79c6\"\u003ethreshold\u003c/span\u003e: \u003cspan style=\"color:#bd93f9\"\u003e0.4\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#ff79c6\"\u003eminMatchCharLength\u003c/span\u003e: \u003cspan style=\"color:#bd93f9\"\u003e0\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#6272a4\"\u003e# limit: 10 # refer: https://www.fusejs.io/api/methods.html#search\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#ff79c6\"\u003ekeys\u003c/span\u003e: [\u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;title\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;permalink\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;summary\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;content\u0026#34;\u003c/span\u003e]\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#ff79c6\"\u003eincludeMatches\u003c/span\u003e: \u003cspan style=\"color:#ff79c6\"\u003etrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#6272a4\"\u003e# Assets Files (资源文件)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#ff79c6\"\u003eassets\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#ff79c6\"\u003efavicon\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e          \u003cspan style=\"color:#6272a4\"\u003e# Site favicon (网站图标)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#ff79c6\"\u003efavicon16x16\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e     \u003cspan style=\"color:#6272a4\"\u003e# Small favicon (小图标)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#ff79c6\"\u003efavicon32x32\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e     \u003cspan style=\"color:#6272a4\"\u003e# Medium favicon (中图标)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#ff79c6\"\u003eapple_touch_icon\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e \u003cspan style=\"color:#6272a4\"\u003e# iOS icon (iOS 图标)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#ff79c6\"\u003esafari_pinned_tab\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e \u003cspan style=\"color:#6272a4\"\u003e# Safari icon (Safari 图标)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#6272a4\"\u003e# Multilingual Support (多语言支持)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ff79c6\"\u003elanguages\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#ff79c6\"\u003ezh\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#ff79c6\"\u003elanguageCode\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;zh-CN\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#ff79c6\"\u003elanguageName\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;简体中文\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#ff79c6\"\u003econtentDir\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;content/zh\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#ff79c6\"\u003eweight\u003c/span\u003e: \u003cspan style=\"color:#bd93f9\"\u003e1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#ff79c6\"\u003emenu\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      \u003cspan style=\"color:#ff79c6\"\u003emain\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        - \u003cspan style=\"color:#ff79c6\"\u003eidentifier\u003c/span\u003e: posts\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e          \u003cspan style=\"color:#ff79c6\"\u003ename\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;Posts\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e          \u003cspan style=\"color:#ff79c6\"\u003eurl\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;/posts/\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e          \u003cspan style=\"color:#ff79c6\"\u003eweight\u003c/span\u003e: \u003cspan style=\"color:#bd93f9\"\u003e1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#6272a4\"\u003e# Output Settings (输出设置)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ff79c6\"\u003eoutputs\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#ff79c6\"\u003ehome\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    - HTML\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    - RSS\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    - JSON               \u003cspan style=\"color:#6272a4\"\u003e# Required for search (搜索功能需要)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#6272a4\"\u003e# Rendering Configuration (渲染配置)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ff79c6\"\u003emarkup\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#ff79c6\"\u003egoldmark\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#ff79c6\"\u003erenderer\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      \u003cspan style=\"color:#ff79c6\"\u003eunsafe\u003c/span\u003e: \u003cspan style=\"color:#ff79c6\"\u003etrue\u003c/span\u003e      \u003cspan style=\"color:#6272a4\"\u003e# Allow HTML in markdown (允许 Markdown 中的 HTML)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#ff79c6\"\u003ehighlight\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#ff79c6\"\u003ecodeFences\u003c/span\u003e: \u003cspan style=\"color:#ff79c6\"\u003etrue\u003c/span\u003e    \u003cspan style=\"color:#6272a4\"\u003e# Enable code highlighting (启用代码高亮)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#ff79c6\"\u003eguessSyntax\u003c/span\u003e: \u003cspan style=\"color:#ff79c6\"\u003etrue\u003c/span\u003e   \u003cspan style=\"color:#6272a4\"\u003e# Guess code language (猜测代码语言)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#ff79c6\"\u003elineNos\u003c/span\u003e: \u003cspan style=\"color:#ff79c6\"\u003etrue\u003c/span\u003e      \u003cspan style=\"color:#6272a4\"\u003e# Show line numbers (显示行号)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#ff79c6\"\u003estyle\u003c/span\u003e: dracula     \u003cspan style=\"color:#6272a4\"\u003e# Code highlight theme (代码高亮主题)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#ff79c6\"\u003elineNumbersInTable\u003c/span\u003e: \u003cspan style=\"color:#ff79c6\"\u003etrue\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n  \u003c/div\u003e\n\u003c/details\u003e\u003c/p\u003e","title":"Hugo博客搭建_配置 🚀"},{"content":" 前言 以往总是东一笔西一笔写自己的一些内容，也尝试过用MKDOCS来搭建自己的知识库，前段时间看到很多人用Hugo搭建博客，于是也想尝试一下，在这里记录一下搭建与配置的过程。\n安装环境 我最近也在将日常的工作娱乐环境转向linux，所以说选择了archlinux作为我的安装环境，之后应该会出一系列我的archlinux的配置。\n本文涉及环境以及工具的网站：\nHugo↗ Github↗ Hugo安装及基础配置 Hugo安装 我是用的是archlinux，所以直接用pacman安装：\nsudo pacman -S hugo 安装完之后，可以通过以下命令查看版本：\nhugo version Hugo初始化 通过上述命令安装hugo程序后，可以在选定的目录下通过hugo new site $YOUR_SITE_NAME创建你的博客目录：\n如果不特殊申明，本文接下来的命令行操作都是在$YOUR_SITE_NAME目录下进行的。\nmyArch% hugo new site DHugo Congratulations! Your new Hugo site was created in /home/dm/Test/DHugo. Just a few more steps... 1. Change the current directory to /home/dm/Test/DHugo. 2. Create or install a theme: - Create a new theme with the command \u0026#34;hugo new theme \u0026lt;THEMENAME\u0026gt;\u0026#34; - Or, install a theme from https://themes.gohugo.io/ 3. Edit hugo.toml, setting the \u0026#34;theme\u0026#34; property to the theme name. 4. Create new content with the command \u0026#34;hugo new content \u0026lt;SECTIONNAME\u0026gt;/\u0026lt;FILENAME\u0026gt;.\u0026lt;FORMAT\u0026gt;\u0026#34;. 5. Start the embedded web server with the command \u0026#34;hugo server --buildDrafts\u0026#34;. See documentation at https://gohugo.io/. 可以使用tree指令对我们创建的博客目录进行查看\nmyArch% tree . ├── archetypes │ └── default.md # 博客模板文件 ├── assets # 存放静态资源文件 ├── content # 存放博客文章 ├── data # 存放数据文件 ├── hugo.toml # 博客配置文件，可以修改为hugo.yaml，支持JSON、YAML、TOML三种不同配置文件 ├── i18n # 多语言配置 ├── layouts # 存放布局配置文件 ├── static # 存放静态资源文件，图片、css、js等 └── themes # 存放不同主题 9 directories, 2 files 配置主题 我们在此处的主题选择 PaperMod↗ ，这是一个Star比较高的主题，简约的并且功能较为丰富。当然，你也可以自己选择主题：\n官方的主题网址： https://themes.gohugo.io/↗ 在此处，官方推荐将我们选择的主题fork一个到自己的账户，并使用git submodule进行仓库的链接，这样以便后续主题的单独维护，避免当自己对主题进行修改之后，后续版本管理和更新会与原先主题产生冲突。\n当然了，我并没有fork一个主题并进行修改，我们通常是将themes/$THEME/对应目录下的文件拷贝一份到我们的项目目录$YOUR_SITE_NAME中对应的文件夹下，相对目录需要相同，以便我们复制的文件可以覆盖他的默认配置。\ngit init git submodule add https://github.com/adityatelange/hugo-PaperMod.git themes/PaperMod 之后在hugo.yaml中添加新的一行启用新主题：\ntheme: \u0026#34;PaperMod\u0026#34; 同时为了后续的部署到Github我们需要在config.toml中添加baseURL配置：\nbaseURL: \u0026#34;https://downmars.github.io“ 新建博客 我们可以使用hugo new path/to/your.md来创建你的第一个博客啦！\nhugo new posts/test.md --- title: \u0026#34;Test\u0026#34; date: 2022-10-21T19:00:43+08:00 draft: true --- 这个命令会在content目录下创建posts目录，并在生成posts/test.md，博文使用Markdown语法完成，我们用默认模板生成的博客是草稿状态，可以将draft设置为false，这样文章就可以发表了。\n我们接下来就可以使用hugo server进行本地预览了，通过访问 http://localhost:1313/↗ 可以在本地预览我们创建的博客了。\nhugo server --disableFastRender 但是我们现在只能够本地预览，如果想要发布到Github Pages，还需要借助Action来完成。\nGithub Action自动化部署 Github Pages 本质上是一个静态网站托管系统，你可以使用它为你的每一个仓库制作一个静态网页入口，我可以借助Action来完成部署界面。\n创建Github仓库 Your respository/New/Create a new repository 创建Github仓库 此处Repository name一定得是[你的github账号名].github.io，如Downmars.github.io，然后[Create Repository]即可。 创建ci.yml文件 Github进行自动化部署需要一个ci.yml文件，位于.github/workflows/ci.yaml，步骤如下：\nmkdir .github/workflows touch .github/workflows/ci.yml name: Deploy Hugo site on: push: branches: - main workflow_dispatch: permissions: # 添加这个权限配置 contents: write jobs: deploy: runs-on: ubuntu-latest steps: - uses: actions/checkout@v3 with: submodules: true - name: Setup Hugo uses: peaceiris/actions-hugo@v2 with: hugo-version: \u0026#39;latest\u0026#39; - name: Build run: hugo --minify - name: Deploy uses: peaceiris/actions-gh-pages@v3 with: github_token: ${{ secrets.GITHUB_TOKEN }} # 使用默认令牌 publish_dir: ./public 使用gh-pages部署网页 git remote add origin https://github.com/jianzhnie/jianzhnie.github.io.git # 将本地目录链接到远程服务器的代码仓库 git add . git commit -m \u0026#34;WOW！\u0026#34; git push origin main 此时，我们的博客就已经部署到了Github Pages上了，可以通过https://[你的github账号名].github.io来访问你的博客了。\n我一开始创建的时候会在我的博客网址看不见我的网页，后来查询之后得知需要在Downmars.github.io/Settings/pages/Branch 将分支切换为gh-pages即可\n","permalink":"https://downmars.github.io/zh/posts/2025_01_19-hugo_build_1/","summary":"\u003chr\u003e\n\u003ch1 id=\"前言\"\u003e前言\u003c/h1\u003e\n\u003cp\u003e以往总是东一笔西一笔写自己的一些内容，也尝试过用MKDOCS来搭建自己的知识库，前段时间看到很多人用Hugo搭建博客，于是也想尝试一下，在这里记录一下搭建与配置的过程。\u003c/p\u003e","title":"Hugo博客搭建_基础 😊"}]